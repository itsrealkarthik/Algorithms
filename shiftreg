module SISO_4Bit(CLK,A,B0,B1,B2,B3); //Main module
input CLK,A;
output B0,B1,B2,B3;
D_FF D0(CLK,A,B0);
D_FF D1(CLK,B0,B1);
D_FF D2(CLK,B1,B2);
D_FF D3(CLK,B2,B3);
endmodule
module D_FF(clk,din,q); //Positive Edge D-Flip Flop
input clk,din;
output reg q;
always @ (posedge clk)
q<=din;
endmodule

Testbench:
module testbench;
reg clk,a;
wire b0,b1,b2,b3;
SISO_4Bit s1(clk,a,b0,b1,b2,b3);
initial
begin
clk=0; a=0;
#2 a=1;
#4 a=0;
#2 a=1;
#2 a=0;
#4 a=1;
#2 a=0;
#2 a=1;
#4 a=0;
end
initial
repeat(35)
#1 clk=~clk;
initial
begin
$dumpfile("dump.vcd");
$dumpvars;
end
endmodule

module sipomod(clk,clear, si, po);
input clk, si,clear;
output [3:0] po;
reg [3:0] tmp;
reg [3:0] po;
always @(posedge clk)
begin
if (clear)
tmp <= 4'b0000;
else
tmp <= tmp << 1;
tmp[0] <= si;
po = tmp;
end
endmodule

Testbench:
module sipot_b;
reg clk;
reg clear;
reg si;
wire [3:0] po;
sipomod uut (.clk(clk),.clear(clear),.si(si),.po(po) );
initial begin
clk = 0;
clear = 0;
si = 0;
#5 clear=1'b1;
#5 clear=1'b0;
#10 si=1'b1;
#10 si=1'b0;
#10 si=1'b0;
#10 si=1'b1;
#10 si=1'b0;
#10 si=1'bx;
end
always #5 clk = ~clk;
initial #150 $stop;
endmodule

module piso(in,ld,clk,rst,q);
input ld,clk,rst;
input [3:0] in;
output q;
reg [3:0]qq;
assign q=qq[0];
always @ (posedge clk, posedge rst)
begin
if(rst)
qq<=0;
else if(ld)
qq <=in;
else
qq <= {1'b0,qq[3:1]};
end
endmodule
Testbench:
module pisotb();
reg ld,clk,rst;
reg [3:0] in;
wire q;
piso dut(in,ld,clk,rst,q);
initial
begin
clk = 1;
forever #5 clk = ~clk;
end
initial
begin
$dumpfile("pisotb.vcd");
$dumpvars(0,pisotb);
#100 $finish;
end
initial
begin
rst=1;
#10 rst=0;ld=1;in=4'b0111;
#10 ld=0;in=0;
end
endmodule

module pipo(clk,rst,ld,in,q);
input clk,rst,ld;
input [3:0]in;
output reg [3:0] q;
always @(posedge clk)
begin
if (rst)
q <= 0;
else if(ld)
q=in[3:0];
end
endmodule

Testbench:
module pipotb();
reg clk,rst,ld;
reg [3:0]in;
wire [3:0]q;
pipo m(clk,rst,ld,in,q);
initial
begin
$dumpfile("pipotb.vcd");
$dumpvars(0,pipotb);
end
initial
begin
clk=1;
forever #5 clk=~clk;
end
initial
begin
#10 rst=1;
#10 rst=0;ld=1;
#10 in=4'b1001;
#200 $finish;
end
endmodule

